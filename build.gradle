plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    slf4jVersion = '2.0.0'

group 'org.example'
version '1.0-SNAPSHOT'

allure {
    report { // секция репорта
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папки build/allure-results
        aspectjWeaver.set(true) // обработка аннотации @Step
        frameworks {
            junit5 { // название фреймворка
                adapterVersion.set(allureVersion) // версия интеграции фреймворка и Allure
            }
        }
    }
}


dependencies {
    testImplementation (
            "com.codeborne:selenide:6.7.4",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.9.0",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.github.javafaker:javafaker:1.0.2"
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task properties_test(type: Test) {
    useJUnitPlatform{
        includeTags "properties"
    }
}

task hello_test(type: Test) {
    useJUnitPlatform{
        includeTags "hello"
    }
}

task registration_form_test(type: Test) {
    useJUnitPlatform{
        includeTags "registration"
    }
}